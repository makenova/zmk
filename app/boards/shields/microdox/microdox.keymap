/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define EXTRA   4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        combo_ent {
            compatible = "zmk,behavior-combo";
            label = "COMBO_ENT";
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp RET>;
        };

        combo_bksp {
            compatible = "zmk,behavior-combo";
            label = "COMBO_BKSP";
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp BSPC>;
        };

        combo_tab {
            compatible = "zmk,behavior-combo";
            label = "COMBO_TAB";
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
        };

        combo_del {
            compatible = "zmk,behavior-combo";
            label = "COMBO_DEL";
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp DEL>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                bindings = <
                        &kp Q       &kp W       &kp E      &kp R      &kp T &kp Y &kp U      &kp I      &kp O       &kp P
                        &hm LSHFT A &hm LCTRL S &hm LALT D &hm LGUI F &kp G &kp H &hm RGUI J &hm RALT K &hm RCTRL L &hm RSHFT SEMI
                        &kp Z       &kp X       &kp C      &kp V      &kp B &kp N &kp M      &kp COMMA  &kp DOT     &kp FSLH
                                &kp TAB    &mo EXTRA  &lt SYM ESC            &lt NAV SPACE &mo FUNC &kp DEL
                >;
                };

                nav_layer {
                bindings = <
                        &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
                        &trans &trans &trans &trans &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp SQT
                        &kp GRAVE &kp LBKT &kp RBKT &trans &trans &trans &kp BSLH &kp MINUS &kp EQUAL &trans
                                &trans &trans &trans        &trans &trans &trans
                >;
                };

                sym_layer {
                bindings = <
                        &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
                        &trans &trans &trans &trans &trans &kp HOME &kp PG_DN &kp PG_UP &kp END &kp DQT
                        &kp TILDE &kp LBRC &kp RBRC &trans &trans &trans &kp PIPE &kp UNDER &kp PLUS &trans
                                &trans &trans &trans        &trans &trans &trans
                >;
                };

                func_layer {
                bindings = <
                        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
                        &kp F11 &kp F12 &trans &trans &trans &trans &trans &trans &trans &trans
                        &trans &trans &trans &trans &trans &trans &trans &kp C_VOL_DN &kp C_VOL_UP &trans
                                        &trans &trans &trans        &trans &trans &trans
                >;
                };

                extra_layer {
                bindings = <
                        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans
                        &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                        &trans &trans &bt BT_CLR &trans &trans &trans &trans &bt BT_PRV &bt BT_NXT &trans
                                        &trans &trans &reset      &bootloader &trans &trans
                >;
                };
        };
};
